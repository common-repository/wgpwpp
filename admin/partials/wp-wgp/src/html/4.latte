{layout 'service_layout.latte'}

{block progressBarTitle}{__("Finishing setting up the service", 'wgpwpp')}{/block}

{block main}
<img class="wds_image" src="{$img_url}/ssl-certificate.png" alt="" srcset="">
<h1>{__("Finishing setting up the service", 'wgpwpp')}</h1>

{if !$plugin->get_client()->is_registered()}
    {include errorSvg}
    <p>{sprintf(__("The plugin has not been yet paired with your customer account at %s", 'wgpwpp'), '<strong>WEDOS&nbsp;Internet,&nbsp;a.s.</strong>')|noescape}</p>
    <p>{sprintf(__("Return back to the first step and register the plugin.", 'wgpwpp'), '<strong>WEDOS&nbsp;Internet,&nbsp;a.s.</strong>')|noescape}</p>
    <section id="control">
        <button id="back" class="btn">{__('Previous step', 'wgpwpp')}</button>
    </section>
{elseif !$service->is_created()}
    {include errorSvg}
    <p>{__("The WEDOS Global service has not been yet completelly set up. Please return back to the second step and finish service set up process.", 'wgpwpp')}</p>
    <section id="control">
        <button id="back" class="btn">{__('Previous step', 'wgpwpp')}</button>
    </section>
{elseif !$service->is_verified()}
    {include errorSvg}
    <p>{sprintf(__("Ownership of the domain %s has not been successfully verified based on TXT DNS record in domain`s DNS zone.", 'wgpwpp'), "<strong>{$plugin->get_host()}</strong>")|noescape}</p>
    <p>{__("Return back to the third step and verify domain`s ownership.", 'wgpwpp')}</p>
    <section id="control">
        <button id="back" class="btn">{__('Previous step', 'wgpwpp')}</button>
    </section>
{elseif $service->is_pending_ns()}
    {include errorSvg}
    <p>{__('Domain`s DNS configuration is not valid. Return to the fourth step and finish domain`s DNS configuration.', 'wgpwpp')}</p>
    <section id="control">
        <button id="back" class="btn">{__('Previous step', 'wgpwpp')}</button>
    </section>
{elseif $service->is_pending_crt()}
    {include loader}
    <p>{sprintf(__('Generating TLS certificate for encrypted data transfer. %s', 'wgpwpp'),'<strong>'.__('This may take few minutes. Please be patient.', 'wgpwpp').'</strong>')|noescape}</p>
    <p>{sprintf(__("This page is regulary refreshed at %s seconds interval.", 'wgpwpp'), 60)}</p>
    <section id="control">
        <button id="back" class="btn">{__('Previous step', 'wgpwpp')}</button>
        <button id="check" class="btn btn-next">{__('Check status', 'wgpwpp')}</button>
    </section>
{elseif $service->is_error_crt()}
    {include errorSvg}
    <p>{__('An error occured while generating TLS certificate for encrypted data transfer.', 'wgpwpp')}</p>
    <p>{__('To resolve the situation you can repeate request for TLS certificate generation, or go to the WEDOS Global Dashboard for more information.', 'wgpwpp')}</p>
    <section id="control">
        <button id="retry_state" class="btn btn-next">{__('Repeate request for TLS certificate generation', 'wgpwpp')}</button>
        <button id="admin" class="btn btn-next">{__("Go to the Dashboard", 'wgpwpp')}</button>
    </section>
    <p></p>
    <p></p>
    <p></p>
    <section id="control">
        <button id="back" class="btn">{__('Previous step', 'wgpwpp')}</button>
        <button id="check" class="btn btn-next">{__('Check status', 'wgpwpp')}</button>
    </section>
{elseif !$service->is_pointing_to_proxy()}
    <p>{__('Everything is now ready to protect your website. There is only one thing left to do.', 'wgpwpp')}</p>
    <p><strong>{__('The last thing we need is to direct your domain to our proxy servers by setting DNS records mentioned in the table below.', 'wgpwpp')}</strong></p>

    <table id="table-dns">
        <caption>We recommend using the desktop to check DNS records.</caption>
        <thead>
        <tr>
            <th scope="col">{__('type', 'wgpwpp')}</th>
            <th scope="col">{__('name', 'wgpwpp')}</th>
            <th scope="col">{__('data', 'wgpwpp')}</th>
            <th scope="col">{__('TTL', 'wgpwpp')}</th>
        </tr>
        </thead>
        <tbody n:inner-foreach="$dns_records_new as $record">
        <tr>
            <td data-label="type">{$record['type']}</td>
            <td data-label="name">{$record['name']}.{$service->get_service_name()}</td>
            <td class="wgpwpp-copy-to_clipboard-wrapper" title="{__('Click to copy', 'wgpwpp')}" onclick="wgpwpp_copy_to_clipboard(this, this.firstElementChild);" data-label="data">{$record['data']}</td>
            <td data-label="TTL">{$record['ttl']}</td>
        </tr>
        </tbody>
    </table>


    {if !$service->is_dns_approved()}
    <p>{__('You can use the link below to grant consent to change DNS records automatically by us or you can do it manually by editing DNS records for your domain.', 'wgpwpp')}</p>
    <p><strong><a style="font-weight: bold;" href="{$dns_approval_url}" target="_blank">{sprintf(__('Use this link to give consent with automatic DNS setting of your domain %s', 'wgpwpp'), $service->get_service_name())}</a></strong></p>
    <p><strong>{__('or', 'wgpwpp')}</strong></p>
    {/if}

    <p><strong><a style="font-weight: bold;" href="{$dns_admin_link}" target="_blank">{sprintf(__('Use this link to be redirected to your %s domain`s DNS records administration page to set up the above DNS records.', 'wgpwpp'), $service->get_service_name())}</a></strong></p>

    {$dns_warning->render()}

    <table id="table-dns">
        <thead>
        <tr>
            <th scope="col">{__('type', 'wgpwpp')}</th>
            <th scope="col">{__('name', 'wgpwpp')}</th>
            <th scope="col">{__('data', 'wgpwpp')}</th>
            <th scope="col">{__('TTL', 'wgpwpp')}</th>
        </tr>
        </thead>
        <tbody n:inner-foreach="$dns_records as $record">
        <tr>
            <td data-label="type">{$record['type']}</td>
            <td data-label="name">{$record['name']}.{$service->get_service_name()}</td>
            <td data-label="data">{$record['data']}</td>
            <td data-label="TTL">{$record['ttl']}</td>
        </tr>
        </tbody>
    </table>

    <p>{sprintf(__("This page is regulary refreshed at %s seconds interval.", 'wgpwpp'), 60)}</p>

    <section id="control">
        <button id="back" class="btn">{__('Previous step', 'wgpwpp')}</button>
        <button id="check" class="btn btn-next">{__('Check status', 'wgpwpp')}</button>
    </section>
{elseif $error}
    {include errorSvg}
    <p>{__("An error occured during service setup proccess. Please try again.", 'wgpwpp')}</p>
    <section id="control">
        <button id="back" class="btn">{__('Previous step', 'wgpwpp')}</button>
        <button id="repeat" class="btn btn-next">{__('Repeat request', 'wgpwpp')}</button>
    </section>
{else}
    {include doneSvg}
    <p>{__("Everething is done. Your website is now under our protection.", 'wgpwpp')}</p>
    <section id="control">
        <button id="next" class="btn btn-next">{__('Finish', 'wgpwpp')}</button>
    </section>
{/if}

{/block}

{block js}
    {include parent}

    <script>
      function wgpwpp_service_retry_state(btn) {
          if (btn) {
              btn.classList.remove('btn-next');
              btn.disabled = true;
          }

          let data = new FormData();
          data.append('action', 'wgpwpp_layout_service_retry_state');
          data.append('_ajax_nonce', {$nonce_service_retry_state});
          data.append('wgpwpp_step', {$step});

          fetch({$ajax_url}, {
              method: 'POST',
              body: data
          })
              .then((response) => response.json())
              .then((data) => {
                  window.location.replace(data.redirect_uri);
              })
              .catch((e) => {
                  window.alert(__('Invalid request!', 'wgpwpp'));
              });
      }

      let wgp_adm_btn = document.querySelector("button#admin");
      if (wgp_adm_btn)
      {
          wgp_adm_btn.addEventListener("click", (event) => {
              window.open({$wgp_url}, '_blank');
          }, false);
      }

      let wgpwpp_button_retry_state = document.querySelector("button#retry_state");
      if (wgpwpp_button_retry_state)
      {
          wgpwpp_button_retry_state.addEventListener("click", (event) => {
              wgpwpp_button_retry_state.classList.remove('btn-next');
              wgpwpp_button_retry_state.disabled = true;

              let url = new URL(window.location.href);
              url.searchParams.delete('service_error');
              wgpwpp_service_retry_state(wgpwpp_button_retry_state);
          }, false);
      }

      let wgpwpp_button_repeat = document.querySelector("button#repeat");
      if (wgpwpp_button_repeat)
      {
          wgpwpp_button_repeat.addEventListener("click", (event) => {
              wgpwpp_button_repeat.classList.remove('btn-next');
              wgpwpp_button_repeat.disabled = true;

              let url = new URL(window.location.href);
              url.searchParams.delete('service_error');
              wgpwpp_service_info(wgpwpp_button_repeat);
          }, false);
      }

      let wgpwpp_button_check = document.querySelector("button#check");
      if (wgpwpp_button_check)
      {
        wgpwpp_button_check.addEventListener("click", (event) => {
          wgpwpp_service_info(wgpwpp_button_check);
        }, false);
      }

      {if $service->is_pending_crt() || (!$service->is_pointing_to_proxy() && !$service->is_error_crt())}
        setTimeout(function() { wgpwpp_service_info(wgpwpp_button_check); }, 60000);
      {/if}
    </script>
{/block}
